import{_ as l,n as k}from"./index.a9dafe70.js";const O="3.2.3",q={draco:{decoderType:typeof WebAssembly=="object"?"wasm":"js",libraryPath:"libs/",extraAttributes:{},attributeNameEntry:void 0}},x={name:"Draco",id:"draco",module:"draco",shapes:["mesh"],version:O,worker:!0,extensions:["drc"],mimeTypes:["application/octet-stream"],binary:!0,tests:["DRACO"],options:q};function G(e){let t=1/0,r=1/0,n=1/0,a=-1/0,i=-1/0,s=-1/0;const o=e.POSITION?e.POSITION.value:[],c=o&&o.length;for(let u=0;u<c;u+=3){const h=o[u],f=o[u+1],m=o[u+2];t=h<t?h:t,r=f<r?f:r,n=m<n?m:n,a=h>a?h:a,i=f>i?f:i,s=m>s?m:s}return[[t,r,n],[a,i,s]]}function Q(e,t){if(!e)throw new Error(t||"loader assertion failed.")}class A{constructor(t,r){l(this,"fields",void 0),l(this,"metadata",void 0),Q(Array.isArray(t)),W(t),this.fields=t,this.metadata=r||new Map}compareTo(t){if(this.metadata!==t.metadata||this.fields.length!==t.fields.length)return!1;for(let r=0;r<this.fields.length;++r)if(!this.fields[r].compareTo(t.fields[r]))return!1;return!0}select(...t){const r=Object.create(null);for(const a of t)r[a]=!0;const n=this.fields.filter(a=>r[a.name]);return new A(n,this.metadata)}selectAt(...t){const r=t.map(n=>this.fields[n]).filter(Boolean);return new A(r,this.metadata)}assign(t){let r,n=this.metadata;if(t instanceof A){const s=t;r=s.fields,n=F(F(new Map,this.metadata),s.metadata)}else r=t;const a=Object.create(null);for(const s of this.fields)a[s.name]=s;for(const s of r)a[s.name]=s;const i=Object.values(a);return new A(i,n)}}function W(e){const t={};for(const r of e)t[r.name]&&console.warn("Schema: duplicated field name",r.name,r),t[r.name]=!0}function F(e,t){return new Map([...e||new Map,...t||new Map])}class g{constructor(t,r,n=!1,a=new Map){l(this,"name",void 0),l(this,"type",void 0),l(this,"nullable",void 0),l(this,"metadata",void 0),this.name=t,this.type=r,this.nullable=n,this.metadata=a}get typeId(){return this.type&&this.type.typeId}clone(){return new g(this.name,this.type,this.nullable,this.metadata)}compareTo(t){return this.name===t.name&&this.type===t.type&&this.nullable===t.nullable&&this.metadata===t.metadata}toString(){return"".concat(this.type).concat(this.nullable?", nullable":"").concat(this.metadata?", metadata: ".concat(this.metadata):"")}}let d;(function(e){e[e.NONE=0]="NONE",e[e.Null=1]="Null",e[e.Int=2]="Int",e[e.Float=3]="Float",e[e.Binary=4]="Binary",e[e.Utf8=5]="Utf8",e[e.Bool=6]="Bool",e[e.Decimal=7]="Decimal",e[e.Date=8]="Date",e[e.Time=9]="Time",e[e.Timestamp=10]="Timestamp",e[e.Interval=11]="Interval",e[e.List=12]="List",e[e.Struct=13]="Struct",e[e.Union=14]="Union",e[e.FixedSizeBinary=15]="FixedSizeBinary",e[e.FixedSizeList=16]="FixedSizeList",e[e.Map=17]="Map",e[e.Dictionary=-1]="Dictionary",e[e.Int8=-2]="Int8",e[e.Int16=-3]="Int16",e[e.Int32=-4]="Int32",e[e.Int64=-5]="Int64",e[e.Uint8=-6]="Uint8",e[e.Uint16=-7]="Uint16",e[e.Uint32=-8]="Uint32",e[e.Uint64=-9]="Uint64",e[e.Float16=-10]="Float16",e[e.Float32=-11]="Float32",e[e.Float64=-12]="Float64",e[e.DateDay=-13]="DateDay",e[e.DateMillisecond=-14]="DateMillisecond",e[e.TimestampSecond=-15]="TimestampSecond",e[e.TimestampMillisecond=-16]="TimestampMillisecond",e[e.TimestampMicrosecond=-17]="TimestampMicrosecond",e[e.TimestampNanosecond=-18]="TimestampNanosecond",e[e.TimeSecond=-19]="TimeSecond",e[e.TimeMillisecond=-20]="TimeMillisecond",e[e.TimeMicrosecond=-21]="TimeMicrosecond",e[e.TimeNanosecond=-22]="TimeNanosecond",e[e.DenseUnion=-23]="DenseUnion",e[e.SparseUnion=-24]="SparseUnion",e[e.IntervalDayTime=-25]="IntervalDayTime",e[e.IntervalYearMonth=-26]="IntervalYearMonth"})(d||(d={}));let v,B,z;class E{static isNull(t){return t&&t.typeId===d.Null}static isInt(t){return t&&t.typeId===d.Int}static isFloat(t){return t&&t.typeId===d.Float}static isBinary(t){return t&&t.typeId===d.Binary}static isUtf8(t){return t&&t.typeId===d.Utf8}static isBool(t){return t&&t.typeId===d.Bool}static isDecimal(t){return t&&t.typeId===d.Decimal}static isDate(t){return t&&t.typeId===d.Date}static isTime(t){return t&&t.typeId===d.Time}static isTimestamp(t){return t&&t.typeId===d.Timestamp}static isInterval(t){return t&&t.typeId===d.Interval}static isList(t){return t&&t.typeId===d.List}static isStruct(t){return t&&t.typeId===d.Struct}static isUnion(t){return t&&t.typeId===d.Union}static isFixedSizeBinary(t){return t&&t.typeId===d.FixedSizeBinary}static isFixedSizeList(t){return t&&t.typeId===d.FixedSizeList}static isMap(t){return t&&t.typeId===d.Map}static isDictionary(t){return t&&t.typeId===d.Dictionary}get typeId(){return d.NONE}compareTo(t){return this===t}}v=Symbol.toStringTag;class _ extends E{constructor(t,r){super(),l(this,"isSigned",void 0),l(this,"bitWidth",void 0),this.isSigned=t,this.bitWidth=r}get typeId(){return d.Int}get[v](){return"Int"}toString(){return"".concat(this.isSigned?"I":"Ui","nt").concat(this.bitWidth)}}class V extends _{constructor(){super(!0,8)}}class X extends _{constructor(){super(!0,16)}}class Y extends _{constructor(){super(!0,32)}}class $ extends _{constructor(){super(!1,8)}}class H extends _{constructor(){super(!1,16)}}class Z extends _{constructor(){super(!1,32)}}const P={HALF:16,SINGLE:32,DOUBLE:64};B=Symbol.toStringTag;class C extends E{constructor(t){super(),l(this,"precision",void 0),this.precision=t}get typeId(){return d.Float}get[B](){return"Float"}toString(){return"Float".concat(this.precision)}}class J extends C{constructor(){super(P.SINGLE)}}class K extends C{constructor(){super(P.DOUBLE)}}z=Symbol.toStringTag;class tt extends E{constructor(t,r){super(),l(this,"listSize",void 0),l(this,"children",void 0),this.listSize=t,this.children=[r]}get typeId(){return d.FixedSizeList}get valueType(){return this.children[0].type}get valueField(){return this.children[0]}get[z](){return"FixedSizeList"}toString(){return"FixedSizeList[".concat(this.listSize,"]<").concat(this.valueType,">")}}function et(e){switch(e.constructor){case Int8Array:return new V;case Uint8Array:return new $;case Int16Array:return new X;case Uint16Array:return new H;case Int32Array:return new Y;case Uint32Array:return new Z;case Float32Array:return new J;case Float64Array:return new K;default:throw new Error("array type not supported")}}function rt(e,t,r){const n=et(t.value),a=r||nt(t);return new g(e,new tt(t.size,new g("value",n)),!1,a)}function nt(e){const t=new Map;return"byteOffset"in e&&t.set("byteOffset",e.byteOffset.toString(10)),"byteStride"in e&&t.set("byteStride",e.byteStride.toString(10)),"normalized"in e&&t.set("normalized",e.normalized.toString()),t}function at(e,t,r){const n=j(t.metadata),a=[],i=it(t.attributes);for(const s in e){const o=e[s],c=N(s,o,i[s]);a.push(c)}if(r){const s=N("indices",r);a.push(s)}return new A(a,n)}function it(e){const t={};for(const r in e){const n=e[r];t[n.name||"undefined"]=n}return t}function N(e,t,r){const n=r?j(r.metadata):void 0;return rt(e,t,n)}function j(e){const t=new Map;for(const r in e)t.set("".concat(r,".string"),JSON.stringify(e[r]));return t}const L={POSITION:"POSITION",NORMAL:"NORMAL",COLOR:"COLOR_0",TEX_COORD:"TEXCOORD_0"},st={1:Int8Array,2:Uint8Array,3:Int16Array,4:Uint16Array,5:Int32Array,6:Uint32Array,9:Float32Array},ot=4;class ct{constructor(t){l(this,"draco",void 0),l(this,"decoder",void 0),l(this,"metadataQuerier",void 0),this.draco=t,this.decoder=new this.draco.Decoder,this.metadataQuerier=new this.draco.MetadataQuerier}destroy(){this.draco.destroy(this.decoder),this.draco.destroy(this.metadataQuerier)}parseSync(t,r={}){const n=new this.draco.DecoderBuffer;n.Init(new Int8Array(t),t.byteLength),this._disableAttributeTransforms(r);const a=this.decoder.GetEncodedGeometryType(n),i=a===this.draco.TRIANGULAR_MESH?new this.draco.Mesh:new this.draco.PointCloud;try{let s;switch(a){case this.draco.TRIANGULAR_MESH:s=this.decoder.DecodeBufferToMesh(n,i);break;case this.draco.POINT_CLOUD:s=this.decoder.DecodeBufferToPointCloud(n,i);break;default:throw new Error("DRACO: Unknown geometry type.")}if(!s.ok()||!i.ptr){const m="DRACO decompression failed: ".concat(s.error_msg());throw new Error(m)}const o=this._getDracoLoaderData(i,a,r),c=this._getMeshData(i,o,r),u=G(c.attributes),h=at(c.attributes,o,c.indices);return{loader:"draco",loaderData:o,header:{vertexCount:i.num_points(),boundingBox:u},...c,schema:h}}finally{this.draco.destroy(n),i&&this.draco.destroy(i)}}_getDracoLoaderData(t,r,n){const a=this._getTopLevelMetadata(t),i=this._getDracoAttributes(t,n);return{geometry_type:r,num_attributes:t.num_attributes(),num_points:t.num_points(),num_faces:t instanceof this.draco.Mesh?t.num_faces():0,metadata:a,attributes:i}}_getDracoAttributes(t,r){const n={};for(let a=0;a<t.num_attributes();a++){const i=this.decoder.GetAttribute(t,a),s=this._getAttributeMetadata(t,a);n[i.unique_id()]={unique_id:i.unique_id(),attribute_type:i.attribute_type(),data_type:i.data_type(),num_components:i.num_components(),byte_offset:i.byte_offset(),byte_stride:i.byte_stride(),normalized:i.normalized(),attribute_index:a,metadata:s};const o=this._getQuantizationTransform(i,r);o&&(n[i.unique_id()].quantization_transform=o);const c=this._getOctahedronTransform(i,r);c&&(n[i.unique_id()].octahedron_transform=c)}return n}_getMeshData(t,r,n){const a=this._getMeshAttributes(r,t,n);if(!a.POSITION)throw new Error("DRACO: No position attribute found.");if(t instanceof this.draco.Mesh)switch(n.topology){case"triangle-strip":return{topology:"triangle-strip",mode:4,attributes:a,indices:{value:this._getTriangleStripIndices(t),size:1}};case"triangle-list":default:return{topology:"triangle-list",mode:5,attributes:a,indices:{value:this._getTriangleListIndices(t),size:1}}}return{topology:"point-list",mode:0,attributes:a}}_getMeshAttributes(t,r,n){const a={};for(const i of Object.values(t.attributes)){const s=this._deduceAttributeName(i,n);i.name=s;const{value:o,size:c}=this._getAttributeValues(r,i);a[s]={value:o,size:c,byteOffset:i.byte_offset,byteStride:i.byte_stride,normalized:i.normalized}}return a}_getTriangleListIndices(t){const n=t.num_faces()*3,a=n*ot,i=this.draco._malloc(a);try{return this.decoder.GetTrianglesUInt32Array(t,a,i),new Uint32Array(this.draco.HEAPF32.buffer,i,n).slice()}finally{this.draco._free(i)}}_getTriangleStripIndices(t){const r=new this.draco.DracoInt32Array;try{return this.decoder.GetTriangleStripsFromMesh(t,r),lt(r)}finally{this.draco.destroy(r)}}_getAttributeValues(t,r){const n=st[r.data_type],a=r.num_components,s=t.num_points()*a,o=s*n.BYTES_PER_ELEMENT,c=dt(this.draco,n);let u;const h=this.draco._malloc(o);try{const f=this.decoder.GetAttribute(t,r.attribute_index);this.decoder.GetAttributeDataArrayForAllPoints(t,f,c,o,h),u=new n(this.draco.HEAPF32.buffer,h,s).slice()}finally{this.draco._free(h)}return{value:u,size:a}}_deduceAttributeName(t,r){const n=t.unique_id;for(const[s,o]of Object.entries(r.extraAttributes||{}))if(o===n)return s;const a=t.attribute_type;for(const s in L)if(this.draco[s]===a)return L[s];const i=r.attributeNameEntry||"name";return t.metadata[i]?t.metadata[i].string:"CUSTOM_ATTRIBUTE_".concat(n)}_getTopLevelMetadata(t){const r=this.decoder.GetMetadata(t);return this._getDracoMetadata(r)}_getAttributeMetadata(t,r){const n=this.decoder.GetAttributeMetadata(t,r);return this._getDracoMetadata(n)}_getDracoMetadata(t){if(!t||!t.ptr)return{};const r={},n=this.metadataQuerier.NumEntries(t);for(let a=0;a<n;a++){const i=this.metadataQuerier.GetEntryName(t,a);r[i]=this._getDracoMetadataField(t,i)}return r}_getDracoMetadataField(t,r){const n=new this.draco.DracoInt32Array;try{this.metadataQuerier.GetIntEntryArray(t,r,n);const a=ut(n);return{int:this.metadataQuerier.GetIntEntry(t,r),string:this.metadataQuerier.GetStringEntry(t,r),double:this.metadataQuerier.GetDoubleEntry(t,r),intArray:a}}finally{this.draco.destroy(n)}}_disableAttributeTransforms(t){const{quantizedAttributes:r=[],octahedronAttributes:n=[]}=t,a=[...r,...n];for(const i of a)this.decoder.SkipAttributeTransform(this.draco[i])}_getQuantizationTransform(t,r){const{quantizedAttributes:n=[]}=r,a=t.attribute_type();if(n.map(s=>this.decoder[s]).includes(a)){const s=new this.draco.AttributeQuantizationTransform;try{if(s.InitFromAttribute(t))return{quantization_bits:s.quantization_bits(),range:s.range(),min_values:new Float32Array([1,2,3]).map(o=>s.min_value(o))}}finally{this.draco.destroy(s)}}return null}_getOctahedronTransform(t,r){const{octahedronAttributes:n=[]}=r,a=t.attribute_type();if(n.map(s=>this.decoder[s]).includes(a)){const s=new this.draco.AttributeQuantizationTransform;try{if(s.InitFromAttribute(t))return{quantization_bits:s.quantization_bits()}}finally{this.draco.destroy(s)}}return null}}function dt(e,t){switch(t){case Float32Array:return e.DT_FLOAT32;case Int8Array:return e.DT_INT8;case Int16Array:return e.DT_INT16;case Int32Array:return e.DT_INT32;case Uint8Array:return e.DT_UINT8;case Uint16Array:return e.DT_UINT16;case Uint32Array:return e.DT_UINT32;default:return e.DT_INVALID}}function ut(e){const t=e.size(),r=new Int32Array(t);for(let n=0;n<t;n++)r[n]=e.GetValue(n);return r}function lt(e){const t=e.size(),r=new Int32Array(t);for(let n=0;n<t;n++)r[n]=e.GetValue(n);return r}function ht(e,t){if(!e)throw new Error(t||"loaders.gl assertion failed.")}const p={self:typeof self!="undefined"&&self,window:typeof window!="undefined"&&window,global:typeof global!="undefined"&&global,document:typeof document!="undefined"&&document},ft=p.global||p.self||p.window||{},w=typeof process!="object"||String(process)!=="[object process]"||process.browser,S=typeof importScripts=="function",U=typeof process!="undefined"&&process.version&&/v([0-9]*)/.exec(process.version);U&&parseFloat(U[1]);const mt="3.2.3",M={};async function I(e,t=null,r={}){return t&&(e=At(e,t,r)),M[e]=M[e]||_t(e),await M[e]}function At(e,t,r){if(e.startsWith("http"))return e;const n=r.modules||{};return n[e]?n[e]:w?r.CDN?(ht(r.CDN.startsWith("http")),"".concat(r.CDN,"/").concat(t,"@").concat(mt,"/dist/libs/").concat(e)):S?"../src/libs/".concat(e):"modules/".concat(t,"/src/libs/").concat(e):"modules/".concat(t,"/dist/libs/").concat(e)}async function _t(e){if(e.endsWith("wasm"))return await(await fetch(e)).arrayBuffer();if(!w)try{return k&&void 0}catch{return null}if(S)return importScripts(e);const r=await(await fetch(e)).text();return yt(r,e)}function yt(e,t){if(!w)return;if(S)return eval.call(ft,e),null;const r=document.createElement("script");r.id=t;try{r.appendChild(document.createTextNode(e))}catch{r.text=e}return document.body.appendChild(r),null}const D="1.4.1",bt="https://www.gstatic.com/draco/versioned/decoders/".concat(D,"/draco_decoder.js"),It="https://www.gstatic.com/draco/versioned/decoders/".concat(D,"/draco_wasm_wrapper.js"),gt="https://www.gstatic.com/draco/versioned/decoders/".concat(D,"/draco_decoder.wasm"),wt="https://raw.githubusercontent.com/google/draco/".concat(D,"/javascript/draco_encoder.js");let y,b;async function Dt(e){const t=e.modules||{};return t.draco3d?y=y||t.draco3d.createDecoderModule({}).then(r=>({draco:r})):y=y||Mt(e),await y}async function pt(e){const t=e.modules||{};return t.draco3d?b=b||t.draco3d.createEncoderModule({}).then(r=>({draco:r})):b=b||Et(e),await b}async function Mt(e){let t,r;switch(e.draco&&e.draco.decoderType){case"js":t=await I(bt,"draco",e);break;case"wasm":default:[t,r]=await Promise.all([await I(It,"draco",e),await I(gt,"draco",e)])}return t=t||globalThis.DracoDecoderModule,await Ot(t,r)}function Ot(e,t){const r={};return t&&(r.wasmBinary=t),new Promise(n=>{e({...r,onModuleLoaded:a=>n({draco:a})})})}async function Et(e){let t=await I(wt,"draco",e);return t=t||globalThis.DracoEncoderModule,new Promise(r=>{t({onModuleLoaded:n=>r({draco:n})})})}const T={POSITION:"POSITION",NORMAL:"NORMAL",COLOR_0:"COLOR",TEXCOORD_0:"TEX_COORD"},St=()=>{};class Ft{constructor(t){l(this,"draco",void 0),l(this,"dracoEncoder",void 0),l(this,"dracoMeshBuilder",void 0),l(this,"dracoMetadataBuilder",void 0),l(this,"log",void 0),this.draco=t,this.dracoEncoder=new this.draco.Encoder,this.dracoMeshBuilder=new this.draco.MeshBuilder,this.dracoMetadataBuilder=new this.draco.MetadataBuilder}destroy(){this.destroyEncodedObject(this.dracoMeshBuilder),this.destroyEncodedObject(this.dracoEncoder),this.destroyEncodedObject(this.dracoMetadataBuilder),this.dracoMeshBuilder=null,this.dracoEncoder=null,this.draco=null}destroyEncodedObject(t){t&&this.draco.destroy(t)}encodeSync(t,r={}){return this.log=St,this._setOptions(r),r.pointcloud?this._encodePointCloud(t,r):this._encodeMesh(t,r)}_getAttributesFromMesh(t){const r={...t,...t.attributes};return t.indices&&(r.indices=t.indices),r}_encodePointCloud(t,r){const n=new this.draco.PointCloud;r.metadata&&this._addGeometryMetadata(n,r.metadata);const a=this._getAttributesFromMesh(t);this._createDracoPointCloud(n,a,r);const i=new this.draco.DracoInt8Array;try{const s=this.dracoEncoder.EncodePointCloudToDracoBuffer(n,!1,i);if(!(s>0))throw new Error("Draco encoding failed.");return this.log("DRACO encoded ".concat(n.num_points(),` points
        with `).concat(n.num_attributes()," attributes into ").concat(s," bytes")),R(i)}finally{this.destroyEncodedObject(i),this.destroyEncodedObject(n)}}_encodeMesh(t,r){const n=new this.draco.Mesh;r.metadata&&this._addGeometryMetadata(n,r.metadata);const a=this._getAttributesFromMesh(t);this._createDracoMesh(n,a,r);const i=new this.draco.DracoInt8Array;try{const s=this.dracoEncoder.EncodeMeshToDracoBuffer(n,i);if(s<=0)throw new Error("Draco encoding failed.");return this.log("DRACO encoded ".concat(n.num_points(),` points
        with `).concat(n.num_attributes()," attributes into ").concat(s," bytes")),R(i)}finally{this.destroyEncodedObject(i),this.destroyEncodedObject(n)}}_setOptions(t){if("speed"in t&&this.dracoEncoder.SetSpeedOptions(...t.speed),"method"in t){const r=this.draco[t.method||"MESH_SEQUENTIAL_ENCODING"];this.dracoEncoder.SetEncodingMethod(r)}if("quantization"in t)for(const r in t.quantization){const n=t.quantization[r],a=this.draco[r];this.dracoEncoder.SetAttributeQuantization(a,n)}}_createDracoMesh(t,r,n){const a=n.attributesMetadata||{};try{const i=this._getPositionAttribute(r);if(!i)throw new Error("positions");const s=i.length/3;for(let o in r){const c=r[o];o=T[o]||o;const u=this._addAttributeToMesh(t,o,c,s);u!==-1&&this._addAttributeMetadata(t,u,{name:o,...a[o]||{}})}}catch(i){throw this.destroyEncodedObject(t),i}return t}_createDracoPointCloud(t,r,n){const a=n.attributesMetadata||{};try{const i=this._getPositionAttribute(r);if(!i)throw new Error("positions");const s=i.length/3;for(let o in r){const c=r[o];o=T[o]||o;const u=this._addAttributeToMesh(t,o,c,s);u!==-1&&this._addAttributeMetadata(t,u,{name:o,...a[o]||{}})}}catch(i){throw this.destroyEncodedObject(t),i}return t}_addAttributeToMesh(t,r,n,a){if(!ArrayBuffer.isView(n))return-1;const i=this._getDracoAttributeType(r),s=n.length/a;if(i==="indices"){const u=n.length/3;return this.log("Adding attribute ".concat(r,", size ").concat(u)),this.dracoMeshBuilder.AddFacesToMesh(t,u,n),-1}this.log("Adding attribute ".concat(r,", size ").concat(s));const o=this.dracoMeshBuilder,{buffer:c}=n;switch(n.constructor){case Int8Array:return o.AddInt8Attribute(t,i,a,s,new Int8Array(c));case Int16Array:return o.AddInt16Attribute(t,i,a,s,new Int16Array(c));case Int32Array:return o.AddInt32Attribute(t,i,a,s,new Int32Array(c));case Uint8Array:case Uint8ClampedArray:return o.AddUInt8Attribute(t,i,a,s,new Uint8Array(c));case Uint16Array:return o.AddUInt16Attribute(t,i,a,s,new Uint16Array(c));case Uint32Array:return o.AddUInt32Attribute(t,i,a,s,new Uint32Array(c));case Float32Array:default:return o.AddFloatAttribute(t,i,a,s,new Float32Array(c))}}_getDracoAttributeType(t){switch(t.toLowerCase()){case"indices":return"indices";case"position":case"positions":case"vertices":return this.draco.POSITION;case"normal":case"normals":return this.draco.NORMAL;case"color":case"colors":return this.draco.COLOR;case"texcoord":case"texcoords":return this.draco.TEX_COORD;default:return this.draco.GENERIC}}_getPositionAttribute(t){for(const r in t){const n=t[r];if(this._getDracoAttributeType(r)===this.draco.POSITION)return n}return null}_addGeometryMetadata(t,r){const n=new this.draco.Metadata;this._populateDracoMetadata(n,r),this.dracoMeshBuilder.AddMetadata(t,n)}_addAttributeMetadata(t,r,n){const a=new this.draco.Metadata;this._populateDracoMetadata(a,n),this.dracoMeshBuilder.SetMetadataForAttribute(t,r,a)}_populateDracoMetadata(t,r){for(const[n,a]of Nt(r))switch(typeof a){case"number":Math.trunc(a)===a?this.dracoMetadataBuilder.AddIntEntry(t,n,a):this.dracoMetadataBuilder.AddDoubleEntry(t,n,a);break;case"object":a instanceof Int32Array&&this.dracoMetadataBuilder.AddIntEntryArray(t,n,a,a.length);break;case"string":default:this.dracoMetadataBuilder.AddStringEntry(t,n,a)}}}function R(e){const t=e.size(),r=new ArrayBuffer(t),n=new Int8Array(r);for(let a=0;a<t;++a)n[a]=e.GetValue(a);return r}function Nt(e){return e.entries&&!e.hasOwnProperty("entries")?e.entries():Object.entries(e)}const Lt={pointcloud:!1,attributeNameEntry:"name"},Bt={name:"DRACO",id:"draco",module:"draco",version:O,extensions:["drc"],encode:Ut,options:{draco:Lt}};async function Ut(e,t={}){const{draco:r}=await pt(t),n=new Ft(r);try{return n.encodeSync(e,t.draco)}finally{n.destroy()}}const zt={id:w?"draco-writer":"draco-writer-nodejs",name:"Draco compressed geometry writer",module:"draco",version:O,worker:!0,options:{draco:{},source:null}},Tt={...x,parse:Rt};async function Rt(e,t){const{draco:r}=await Dt(t),n=new ct(r);try{return n.parseSync(e,t==null?void 0:t.draco)}finally{n.destroy()}}const Pt=Tt;export{Tt as DracoLoader,x as DracoWorkerLoader,Bt as DracoWriter,zt as DracoWriterWorker,Pt as _TypecheckDracoLoader};
